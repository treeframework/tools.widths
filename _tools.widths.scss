// *************************************
//
//   #WIDTHS-TOOLS
//
// *************************************

// A mixin to spit out our width classes. Pass in the columns we want the widths
// to have, and an optional suffix for responsive widths.
//
// E.g. to create thirds and quarters for a small breakpoint:
// @include tree-widths(3 4, -sm);





// Predefine the variables below in order to alter and enable specific features.
$tree-widths-namespace: $tree-namespace !default;

// Do we want to use classes like `<div class="u-1/4">` instead of
// `<div class="u-1-of-4">`?
$tree-use-fractions: true !default;

// Depending on what we chose for `$tree-use-fractions`, create the relevant
// delimiter.
@if ($tree-use-fractions == true) {
    $tree-widths-delimiter: \/ !global;
} @else {
    $tree-widths-delimiter: -of- !global;
}

@mixin tree-widths($tree-widths-columns, $tree-widths-breakpoint: null) {

    // Loop through the number of columns for each denominator of our fractions.
    @each $tree-widths-denominator in $tree-widths-columns {

        // If weâ€™re trying to make wholes, just spit a 100% width utility out
        // one time only.
        @if ($tree-widths-denominator == 1) {
            .#{$tree-widths-namespace}u-1#{$tree-widths-delimiter}1#{$tree-widths-breakpoint} {
                width: 100% !important;
            }
        } @else {

            // Begin creating a numberator for our fraction up until we hit the
            // denominator.
            @for $tree-widths-numerator from 1 to $tree-widths-denominator {

                // Build a class in the format `.u-3/4` or `.u-3-of-4`.
                .#{$tree-widths-namespace}u-#{$tree-widths-numerator}#{$tree-widths-delimiter}#{$tree-widths-denominator}#{$tree-widths-breakpoint} {
                    width: ($tree-widths-numerator / $tree-widths-denominator) * 100% !important;
                }

            }

        }

    }

}
